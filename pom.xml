<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sistema</groupId>
	<artifactId>livraria</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>usuario</name>
	<description>A API de Livraria permite a gestão de livros, autores e editoras, oferecendo funcionalidades como cadastro, consulta, atualização e remoção de livros, além de permitir a busca por ISBN. A API também fornece endpoints para a consulta de detalhes de autores e editoras, facilitando a interação com os dados da livraria de forma eficiente e organizada.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
		<specification.version>3.1.0</specification.version>
		<maven.compiler.source>22</maven.compiler.source>
		<maven.compiler.target>22</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- Spring Boot Starter Web: Fornece as dependências essenciais para desenvolver uma aplicação web com Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- Exclusão do logback-spring (log padrão do Spring Boot) -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Log4j2: Para logging com Log4j2, substituindo o Logback padrão -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- Dependência de Teste do Spring Boot: Inclui ferramentas para realizar testes automatizados -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Boot Starter Data JPA: Fornece a integração com o Spring Data JPA, permitindo o uso de JPA para persistência de dados -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- PostgreSQL Driver: Driver JDBC para a conexão com o banco de dados PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Flyway Core -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<!-- Spring Boot Starter Validation: Para validação de dados de entrada com anotações como @NotNull, @Size, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Lombok: Biblioteca para reduzir boilerplate code (ex: getters, setters, equals, hashcode) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring Boot Starter Hateoas: Para trabalhar com HATEOAS (Hypermedia as the engine of application state) nas APIs -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- Specification Arg Resolver: Facilita a criação de consultas dinâmicas com JPA -->
		<dependency>
			<groupId>net.kaczmarzyk</groupId>
			<artifactId>specification-arg-resolver</artifactId>
			<version>${specification.version}</version>
		</dependency>

		<!-- Springdoc OpenAPI: Para gerar a documentação OpenAPI (Swagger) da aplicação -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version>
		</dependency>

		<!-- Spring Security: Para segurança, autenticação e autorização na aplicação -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Spring Security Test: Para realizar testes de segurança com o Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JJWT API: Para criação e verificação de tokens JWT (JSON Web Tokens) -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.12.6</version>
		</dependency>

		<!-- JJWT Impl: Implementação de suporte a JWT -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>

		<!-- JJWT Jackson: Para integração do JJWT com o Jackson (para serialização e desserialização JSON) -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.12.6</version>
			<scope>runtime</scope>
		</dependency>

		<!--PDF-->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13.3</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<!-- Exclui o Lombok do empacotamento do jar -->
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
